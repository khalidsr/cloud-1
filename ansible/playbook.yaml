---
- hosts: localhost
  become: true
  collections:
  - community.docker

  vars:
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - vim 
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Ensure Docker service is running
      become: true
      service:
        name: docker
        state: started
        enabled: yes
   
    - name: Add current user to Docker group
      become: true
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: true

    - name: Copy .env file
      ansible.builtin.copy:
        src: .env
        dest: ../inception
    
    - name: Create {{ ansible_env.HOME }}/data directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ ansible_env.HOME }}/data/wordpress"
        - "{{ ansible_env.HOME }}/data/mariadb"
        - "{{ ansible_env.HOME }}/data/phpmyadmin"

    - name: Install Docker Compose V2 plugin
      apt:
        name: docker-compose-plugin
        state: latest
        update_cache: true

    - name: Start docker-compose (V2)
      community.docker.docker_compose_v2:
        project_src: "/root/cloud-1/inception"  # Absolute path recommended
        build: "always"  # Correct value type
        pull: "always"  # Optional: ensure latest images
        recreate: "always"  # Optional: recreate containers
        remove_orphans: yes  # Optional: clean up unused services
      register: compose_output

    - debug:
        var: result.stdout

